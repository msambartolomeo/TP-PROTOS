                        SHOES Protocol Version 1.0

1 Introduction

    SHOES is a TCP-based protocol designed to obtain metrics from a server
    and change its configuration at runtime. The name is derived from
    "Should Establish" a connection. Inspired by SOCKS5 [RFC 1928],
    it is a simple, reliable, and secure protocol for establishing a
    connection to a server.

1.1 Considerations

    Unless otherwise noted, the decimal numbers appearing in packet-format
    diagrams represent the length of the corresponding field, in
    octets.  Where a given octet must take on a specific value, the
    syntax X'hh' is used to denote the value of the single octet in that
    field. When the word 'Variable' is used, it indicates that the
    corresponding field has a variable length defined either by an
    associated (one or two octet) length field, or by a data type field.

    In addition, all fields which are larger than one octet are represented
    in network byte order.


2 Authentication

    Once the SHOES V1 server has started, and the client has selected the
    Username/Password Authentication protocol, the Username/Password
    negotiation begins.  This begins with the client producing a
    Username/Password request:

            +-----+------+----------+------+----------+
            | VER | ULEN |  UNAME   | PLEN |  PASSWD  |
            +-----+------+----------+------+----------+
            |  1  |  1   | 1 to 255 |  1   | 1 to 255 |
            +-----+------+----------+------+----------+

    Where:
            o VER       The protocol version number, currently X'01'.
            o ULEN      The length of the username.
            o UNAME     The username.
            o PLEN      The length of the password.
            o PASSWD    The password.

    Both UNAME and PASSWD are in ISO/IEC 8859-1:1998 character set,
    also known as 8-bit ASCII.

    The server verifies the supplied UNAME and PASSWD, and sends the
    following response:

                         +-----+--------+
                         | VER | STATUS |
                         +-----+--------+
                         |  1  |   1    |
                         +-----+--------+

    A STATUS field of X'00' indicates success. If the server returns a
    failure (STATUS value other than X'00') status, it MUST close the  // TODO: Borrar esto. Aún si lo dejamos hay que avisar quién es el que cierra la conexión
    connection.

    Other values defined in this version are:
            o X'01' - General SHOES server failure.
            o X'02' - Invalid protocol version.
            o X'03' - Invalid username or password.


3 Requests

    Once the authorization process has concluded, the client sends the
    request details.

    The SHOES request is formed as follows:

            +------+-----+----------+
            | FMLY | CMD |   DATA   |
            +------+-----+----------+
            |  1   |  1  | Variable |
            +------+-----+----------+
    Where:

              o  FMLY   Family of the request.
                 o  GET Requests X'00'
                 o  PUT Requests X'01'
              o  CMD    Identifies the command to be executed within
              the family specified.
              o  DATA   Contains the command specific data. Further details
              can be found in the following sections.


3.1 GET Requests

        This type of requests are used to retrieve information from the
        server. The information returned can be metrics that have been
        collected from the server or information from the users that is
        available.

        GET Requests MUST NOT use the DATA field, it is not used and MUST
        be empty.

        The values currently defined for CMD in this family are:

                  o  X'00' SERVER METRICS
                  o  X'01' LIST USERS
                  o  X'02' PASSWORD SPOOFING STATUS

        Section 4.1 goes into greater details on how the responses
        are formed.


3.2 PUT Requests

        This type of requests are used to send information to the server,
        adding or modifying the information that is available.

        All the following requests MUST use the DATA field, and how it is
        used is dependent on the CMD value.

        The values currently defined for CMD in this family are:

                o X'00' ADD USER
                o X'01' REMOVE USER
                o X'02' EDIT USER
                o X'03' MODIFY BUFFER SIZE
                o X'04' MODIFY PASSWORD SPOOFING STATUS

        The requests formats are as follows:

        3.2.1 ADD USER
            +---------+---------+------+----------+------+----------+
            |  FMLY   |   CMD   | ULEN |  USNAME  | PLEN |  PASSWD  |
            +---------+---------+------+----------+------+----------+
            |  X'01'  |  X'00'  |  1   | 1 to 255 |  1   | 1 to 255 |
            +---------+---------+------+----------+------+----------+

            Where both USANME and PASSWD are in ISO/IEC 8859-1:1998 character
            set, also known as 8-bit ASCII. The server will try to create a new
            user with the given USNAME and PASSWD. If the user already
            exists, the server will return a failure status.


        3.2.2 REMOVE USER
            +---------+---------+------+----------+
            |  FMLY   |   CMD   | ULEN |  USNAME  |
            +---------+---------+------+----------+
            |  X'01'  |  X'01'  |  1   | 1 to 255 |
            +---------+---------+------+----------+

            Where USNAME is in ISO/IEC 8859-1:1998 character set, also known
            as 8-bit ASCII. The server will try to remove the user with the
            given USNAME. If the user does not exist, the server will return
            a failure status.


        3.2.3 EDIT USER
            +---------+---------+------+----------+------+----------+
            |  FMLY   |   CMD   | ULEN |  USNAME  | PLEN |  PASSWD  |
            +---------+---------+------+----------+------+----------+
            |  X'01'  |  X'02'  |  1   | 1 to 255 |  1   | 1 to 255 |
            +---------+---------+------+----------+------+----------+

            Where USNAME is in ISO/IEC 8859-1:1998 character set, also known
            as 8-bit ASCII. The server will try to associate the given USNAME
            with the given PASSWD. If the user does not exist, the server will
            return a failure status.


        3.2.4 MODIFY BUFFER SIZE
            +---------+---------+---------+
            |  FMLY   |   CMD   | BUFSIZE |
            +---------+---------+---------+
            |  X'01'  |  X'03'  |    2    |
            +---------+---------+---------+

            Where BUFSIZE is a 2 octet integer representing the buffer size
            in bytes. The server will try to modify the buffer size to the
            given value. However, the server will not allow the buffer size
            to be set to a value less than 512 bytes, or greater than 65536
            bytes. If a value outside the allowed range is given, the server
            will return a failure status and not modify the buffer size.


        3.2.5 MODIFY PASSWORD SPOOFING STATUS
            +---------+---------+------+
            |  FMLY   |   CMD   | SET  |
            +---------+---------+------+
            |  X'01'  |  X'04'  |  1   |
            +---------+---------+------+

            Where SET is a 1 octet integer representing the password spoofing
            status. A value of X'00' indicates that the server should not
            spoof passwords. A value of X'01' indicates that the server should
            spoof passwords. If a value other than X'00' or X'01' is given,
            the server will return a failure status and not modify the
            password spoofing status.

4 Responses

    As stated previous, the server will return a different format
    depending on the command that was requested. The following sections
    go into greater details on how the replies are formed.

    However, all response formats begin with the STATUS field, which can
    take the following values:
            o  X'00' Success
            o  X'01' General SHOES server failure
            o  X'02' FMLY not supported
            o  X'03' CMD not supported
            o  X'04' and X'05' CMD-specific failure status. See
            the following sections for more details.

    If the server returns a failure (STATUS value other than X'00'),
    it MUST close the connection.

4.1 Responses to GET Requests

    The response to a GET request contains the data the request asked for.
    However, the data is not in a fixed format. The following sections
    go into greater details on how the replies are formed.
    It is important to note that GET requests will not return a CMD-specific
    failure status.

4.1.1 SERVER METRICS

    The server will return the following reply:

            +--------+-------+-------+---------+
            | STATUS | HCONN | CCONN | BTRANSF |
            +--------+-------+-------+---------+
            |   1    |   4   |   4   |    4    |
            +--------+-------+-------+---------+

    Where:
            o STATUS    Status of the request.
            o HCONN     Number of historic connections to the server.
            o CCONN     Number of current connections to the server.
            o BTRANSF   Number of bytes transferred by the server.


4.1.2 LIST USERS

    The server will return the following reply:
                +--------+--------+---------+----------+
                | STATUS | UCOUNT | ULEN(n) | UNAME(n) |
                +--------+--------+---------+----------+
                |   1    |   1    |    1    | 1 to 255 |
                +--------+--------+---------+----------+

    Where:
            o STATUS        Status of the request.
            o UCOUNT        Number of users listed.
            o ULEN(n)       Length of the UNAME(n) field.
            o UNAME(n)      Username of the n-th user.

    The "n" in the above example is only shown for illustration purposes so
    that the reader understands the structure of the reply. If no users
    are listed, the server will return a reply with a UCOUNT of 0. If there
    is at least one user listed, the server will return a ULEN and a UNAME
    value for each user.

    Each UNAME field will be in ISO/IEC 8859-1:1998 character set, also known
    as 8-bit ASCII.

4.1.3 PASSWORD SPOOFING STATUS

    The server will return the following reply:

                +--------+-------+
                | STATUS | SPOOF |
                +--------+-------+
                |   1    |   4   |
                +--------+-------+

    Where:
            o STATUS    Status of the request.
            o SPOOF     Password spoofing status.

    The field SPOOF contains one octet, which is either X'00' or X'01',
    representing the password spoofing status as disabled or enabled,
    respectively.

4.2 Responses to PUT Requests

    The response to a PUT request contains the status of the request,
    which will be used to determine if the request was successful.

    In addition, responses to PUT requests can return a CMD-specific
    failure status, indicating a failure specific to the command.
    Therefore, a STATUS of X'04' indicates:
        o ADD USER              - The user already exists.
        o REMOVE USER           - The user does not exist.
        o EDIT USER             - The user does not exist.
        o MODIFY BUFFER SIZE    - The buffer size is out of range.
        o MODIFY PASSWORD SPOOFING STATUS - The password spoofing
        status is out of range.
    In addition, a STATUS of X'05' indicates:
        o ADD USER              - The maximum number of users has been
        reached.

    See section 3.2 for more details in accepted values ranges for each
    command.